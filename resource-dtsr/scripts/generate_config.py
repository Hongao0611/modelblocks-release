import sys
import os
import configparser

from dtsr.formula import Formula

X_path = sys.argv[1]
y_path = sys.argv[2]
outdir = sys.argv[3]
main_effects = sys.argv[4:]

config = configparser.ConfigParser()
config.optionxform = str
config.readfp(sys.stdin)

config['data']['X_train'] = X_path
config['data']['X_dev'] = X_path
config['data']['X_test'] = X_path
config['data']['y_train'] = y_path + '.train'
config['data']['y_dev'] = y_path + '.dev'
config['data']['y_test'] = y_path + '.test'

impulse_to_irf = {}
if 'impulse_to_irf' in config:
    for key in config['impulse_to_irf']:
        impulse_to_irf[key] = config['impulse_to_irf'][key]

if 'default' in impulse_to_irf:
    default_irf_str = impulse_to_irf['default']
else:
    default_irf_str = 'ShiftedGammaShapeGT1(alpha=2, beta=5, delta=-0.2, ran=T)'

impulse_to_transform = {}
if 'impulse_to_transform' in config:
    for key in config['impulse_to_transform']:
        impulse_to_transform[key] = config['impulse_to_transform'][key]

assert 'model_DTSR_template' in config, 'DTSR config template file must contain a section named "model_DTSR_template"'
assert not 'model_DTSR_full' in config, 'DTSR config template contains a model named "model_DTSR_full", which is a reserved name that will be automatically generated by ModelBlocks. Rename the model before continuing'

model_template = config['model_DTSR_template']
f = Formula(model_template['formula'])

for effect in main_effects:
    irf_str = impulse_to_irf.get(effect, default_irf_str)
    effect_name = effect
    transform = impulse_to_transform.get(effect, ['s'])
    if transform == 'None':
        transform = []
    elif isinstance(transform, basestring):
        transform = transform.strip().split()
    for t in reversed(transform):
        effect_name = t + '(' + effect_name + ')'
   
    f.insert_impulses(effect_name, irf_str)

config['model_DTSR_full'] = dict(config['model_DTSR_template']).copy()
config['model_DTSR_full']['formula'] = str(f)
if len(main_effects) > 0:
    config['model_DTSR_full']['ablate'] = ' '.join(main_effects)

config['global_settings'] = {'outdir': outdir}

if 'impulse_to_irf' in config:
    del config['impulse_to_irf']
if 'impulse_to_transform' in config:
    del config['impulse_to_transform']
del config['model_DTSR_template']

if not os.path.exists(outdir):
    os.makedirs(outdir)

with open(outdir + '/config.ini', 'w') as f:
    config.write(f)
